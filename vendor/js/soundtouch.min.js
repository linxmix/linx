// https://github.com/also/soundtouch-js

/*
* SoundTouch JS audio processing library
* Copyright (c) Olli Parviainen
* Copyright (c) Ryan Berdeen
*
* This library is free software; you can redistribute it and/or
* modify it under the terms of the GNU Lesser General Public
* License as published by the Free Software Foundation; either
* version 2.1 of the License, or (at your option) any later version.
*
* This library is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* Lesser General License for more details.
*
* You should have received a copy of the GNU Lesser General Public
* License along with this library; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/
function FifoSampleBuffer(){this._vector=new Float32Array,this._position=0,this._frameCount=0}function extend(t,e){for(var i in e){var r=e.__lookupGetter__(i),s=e.__lookupSetter__(i);r||s?(r&&t.__defineGetter__(i,r),s&&t.__defineSetter__(i,s)):t[i]=e[i]}return t}function testFloatEqual(t,e){return(t>e?t-e:e-t)>1e-10}function FilterSupport(t){this._pipe=t}function SimpleFilter(t,e){FilterSupport.call(this,e),this.sourceSound=t,this.historyBufferSize=22050,this._sourcePosition=0,this.outputBufferPosition=0,this._position=0}function AbstractFifoSamplePipe(t){t?(this.inputBuffer=new FifoSampleBuffer,this.outputBuffer=new FifoSampleBuffer):this.inputBuffer=this.outputBuffer=null}function RateTransposer(t){AbstractFifoSamplePipe.call(this,t),this._reset(),this.rate=1}function SoundTouch(){this.rateTransposer=new RateTransposer(!1),this.tdStretch=new Stretch(!1),this._inputBuffer=new FifoSampleBuffer,this._intermediateBuffer=new FifoSampleBuffer,this._outputBuffer=new FifoSampleBuffer,this._rate=0,this.tempo=0,this.virtualPitch=1,this.virtualRate=1,this.virtualTempo=1,this._calculateEffectiveRateAndTempo()}function Stretch(t){AbstractFifoSamplePipe.call(this,t),this.bQuickSeek=!0,this.bMidBufferDirty=!1,this.pMidBuffer=null,this.overlapLength=0,this.bAutoSeqSetting=!0,this.bAutoSeekSetting=!0,this._tempo=1,this.setParameters(44100,DEFAULT_SEQUENCE_MS,DEFAULT_SEEKWINDOW_MS,DEFAULT_OVERLAP_MS)}FifoSampleBuffer.prototype={get vector(){return this._vector},get position(){return this._position},get startIndex(){return 2*this._position},get frameCount(){return this._frameCount},get endIndex(){return 2*(this._position+this._frameCount)},clear:function(){this.receive(frameCount),this.rewind()},put:function(t){this._frameCount+=t},putSamples:function(t,e,i){e=e||0;var r=2*e;i>=0||(i=(t.length-r)/2);var s=2*i;this.ensureCapacity(i+this._frameCount);var o=this.endIndex;this._vector.set(t.subarray(r,r+s),o),this._frameCount+=i},putBuffer:function(t,e,i){e=e||0,i>=0||(i=t.frameCount-e),this.putSamples(t.vector,t.position+e,i)},receive:function(t){(!(t>=0)||t>this._frameCount)&&(t=this._frameCount),this._frameCount-=t,this._position+=t},receiveSamples:function(t,e){var i=2*e,r=this.startIndex;t.set(this._vector.subarray(r,r+i)),this.receive(e)},extract:function(t,e,i){var r=this.startIndex+2*e,s=2*i;t.set(this._vector.subarray(r,r+s))},ensureCapacity:function(t){var e=2*t;if(this._vector.length<e){var i=new Float32Array(e);i.set(this._vector.subarray(this.startIndex,this.endIndex)),this._vector=i,this._position=0}else this.rewind()},ensureAdditionalCapacity:function(t){this.ensureCapacity(this.frameCount+t)},rewind:function(){this._position>0&&(this._vector.set(this._vector.subarray(this.startIndex,this.endIndex)),this._position=0)}},FilterSupport.prototype={get pipe(){return this._pipe},get inputBuffer(){return this._pipe.inputBuffer},get outputBuffer(){return this._pipe.outputBuffer},fillOutputBuffer:function(t){for(;this.outputBuffer.frameCount<t;){var e=16384-this.inputBuffer.frameCount;if(this.fillInputBuffer(e),this.inputBuffer.frameCount<16384)break;this._pipe.process()}},clear:function(){this._pipe.clear()}},extend(SimpleFilter.prototype,FilterSupport.prototype),extend(SimpleFilter.prototype,{get position(){return this._position},set position(t){if(t>this._position)throw new RangeError("New position may not be greater than current position");var e=this.outputBufferPosition-(this._position-t);if(0>e)throw new RangeError("New position falls outside of history buffer");this.outputBufferPosition=e,this._position=t},get sourcePosition(){return this._sourcePosition},set sourcePosition(t){this.clear(),this._sourcePosition=t},fillInputBuffer:function(t){var e=new Float32Array(2*t),i=this.sourceSound.extract(e,t,this._sourcePosition);this._sourcePosition+=i,this.inputBuffer.putSamples(e,0,i)},extract:function(t,e){this.fillOutputBuffer(this.outputBufferPosition+e);var i=Math.min(e,this.outputBuffer.frameCount-this.outputBufferPosition);this.outputBuffer.extract(t,this.outputBufferPosition,i);var r=this.outputBufferPosition+i;return this.outputBufferPosition=Math.min(this.historyBufferSize,r),this.outputBuffer.receive(Math.max(r-this.historyBufferSize,0)),this._position+=i,i},handleSampleData:function(t){this.extract(t.data,4096)},clear:function(){FilterSupport.prototype.clear.call(this),this.outputBufferPosition=0}}),AbstractFifoSamplePipe.prototype={get inputBuffer(){return this._inputBuffer},set inputBuffer(t){this._inputBuffer=t},get outputBuffer(){return this._outputBuffer},set outputBuffer(t){this._outputBuffer=t},clear:function(){this._inputBuffer.clear(),this._outputBuffer.clear()}},extend(RateTransposer.prototype,AbstractFifoSamplePipe.prototype),extend(RateTransposer.prototype,{set rate(t){this._rate=t},_reset:function(){this.slopeCount=0,this.prevSampleL=0,this.prevSampleR=0},clone:function(){var t=new RateTransposer;return t.rate=this._rate,t},process:function(){var t=this._inputBuffer.frameCount;this._outputBuffer.ensureAdditionalCapacity(t/this._rate+1);var e=this._transpose(t);this._inputBuffer.receive(),this._outputBuffer.put(e)},_transpose:function(t){if(0==t)return 0;for(var e=this._inputBuffer.vector,i=this._inputBuffer.startIndex,r=this._outputBuffer.vector,s=this._outputBuffer.endIndex,o=0,n=0;this.slopeCount<1;)r[s+2*n]=(1-this.slopeCount)*this.prevSampleL+this.slopeCount*e[i],r[s+2*n+1]=(1-this.slopeCount)*this.prevSampleR+this.slopeCount*e[i+1],n++,this.slopeCount+=this._rate;if(this.slopeCount-=1,1!=t)t:for(;;){for(;this.slopeCount>1;)if(this.slopeCount-=1,o++,o>=t-1)break t;var u=i+2*o;r[s+2*n]=(1-this.slopeCount)*e[u]+this.slopeCount*e[u+2],r[s+2*n+1]=(1-this.slopeCount)*e[u+1]+this.slopeCount*e[u+3],n++,this.slopeCount+=this._rate}return this.prevSampleL=e[i+2*t-2],this.prevSampleR=e[i+2*t-1],n}}),extend(SoundTouch.prototype,{clear:function(){rateTransposer.clear(),tdStretch.clear()},clone:function(){var t=new SoundTouch;return t.rate=rate,t.tempo=tempo,t},get rate(){return this._rate},set rate(t){this.virtualRate=t,this._calculateEffectiveRateAndTempo()},set rateChange(t){this.rate=1+.01*t},get tempo(){return this._tempo},set tempo(t){this.virtualTempo=t,this._calculateEffectiveRateAndTempo()},set tempoChange(t){this.tempo=1+.01*t},set pitch(t){this.virtualPitch=t,this._calculateEffectiveRateAndTempo()},set pitchOctaves(t){this.pitch=Math.exp(.69314718056*t),this._calculateEffectiveRateAndTempo()},set pitchSemitones(t){this.pitchOctaves=t/12},get inputBuffer(){return this._inputBuffer},get outputBuffer(){return this._outputBuffer},_calculateEffectiveRateAndTempo:function(){var t=this._tempo,e=this._rate;this._tempo=this.virtualTempo/this.virtualPitch,this._rate=this.virtualRate*this.virtualPitch,testFloatEqual(this._tempo,t)&&(this.tdStretch.tempo=this._tempo),testFloatEqual(this._rate,e)&&(this.rateTransposer.rate=this._rate),this._rate>1?this._outputBuffer!=this.rateTransposer.outputBuffer&&(this.tdStretch.inputBuffer=this._inputBuffer,this.tdStretch.outputBuffer=this._intermediateBuffer,this.rateTransposer.inputBuffer=this._intermediateBuffer,this.rateTransposer.outputBuffer=this._outputBuffer):this._outputBuffer!=this.tdStretch.outputBuffer&&(this.rateTransposer.inputBuffer=this._inputBuffer,this.rateTransposer.outputBuffer=this._intermediateBuffer,this.tdStretch.inputBuffer=this._intermediateBuffer,this.tdStretch.outputBuffer=this._outputBuffer)},process:function(){this._rate>1?(this.tdStretch.process(),this.rateTransposer.process()):(this.rateTransposer.process(),this.tdStretch.process())}});var USE_AUTO_SEQUENCE_LEN=0,DEFAULT_SEQUENCE_MS=USE_AUTO_SEQUENCE_LEN,USE_AUTO_SEEKWINDOW_LEN=0,DEFAULT_SEEKWINDOW_MS=USE_AUTO_SEEKWINDOW_LEN,DEFAULT_OVERLAP_MS=8,_SCAN_OFFSETS=[[124,186,248,310,372,434,496,558,620,682,744,806,868,930,992,1054,1116,1178,1240,1302,1364,1426,1488,0],[-100,-75,-50,-25,25,50,75,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-20,-15,-10,-5,5,10,15,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-4,-3,-2,-1,1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],AUTOSEQ_TEMPO_LOW=.5,AUTOSEQ_TEMPO_TOP=2,AUTOSEQ_AT_MIN=125,AUTOSEQ_AT_MAX=50,AUTOSEQ_K=(AUTOSEQ_AT_MAX-AUTOSEQ_AT_MIN)/(AUTOSEQ_TEMPO_TOP-AUTOSEQ_TEMPO_LOW),AUTOSEQ_C=AUTOSEQ_AT_MIN-AUTOSEQ_K*AUTOSEQ_TEMPO_LOW,AUTOSEEK_AT_MIN=25,AUTOSEEK_AT_MAX=15,AUTOSEEK_K=(AUTOSEEK_AT_MAX-AUTOSEEK_AT_MIN)/(AUTOSEQ_TEMPO_TOP-AUTOSEQ_TEMPO_LOW),AUTOSEEK_C=AUTOSEEK_AT_MIN-AUTOSEEK_K*AUTOSEQ_TEMPO_LOW;extend(Stretch.prototype,AbstractFifoSamplePipe.prototype),extend(Stretch.prototype,{clear:function(){AbstractFifoSamplePipe.prototype.clear.call(this),this._clearMidBuffer()},_clearMidBuffer:function(){this.bMidBufferDirty&&(this.bMidBufferDirty=!1,this.pMidBuffer=null)},setParameters:function(t,e,i,r){t>0&&(this.sampleRate=t),r>0&&(this.overlapMs=r),e>0?(this.sequenceMs=e,this.bAutoSeqSetting=!1):this.bAutoSeqSetting=!0,i>0?(this.seekWindowMs=i,this.bAutoSeekSetting=!1):this.bAutoSeekSetting=!0,this.calcSeqParameters(),this.calculateOverlapLength(this.overlapMs),this.tempo=this._tempo},set tempo(t){var e;this._tempo=t,this.calcSeqParameters(),this.nominalSkip=this._tempo*(this.seekWindowLength-this.overlapLength),this.skipFract=0,e=Math.floor(this.nominalSkip+.5),this.sampleReq=Math.max(e+this.overlapLength,this.seekWindowLength)+this.seekLength},get inputChunkSize(){return this.sampleReq},get outputChunkSize(){return this.overlapLength+Math.max(0,this.seekWindowLength-2*this.overlapLength)},calculateOverlapLength:function(t){var e;e=this.sampleRate*t/1e3,16>e&&(e=16),e-=e%8,this.overlapLength=e,this.pRefMidBuffer=new Float32Array(2*this.overlapLength),this.pMidBuffer=new Float32Array(2*this.overlapLength)},checkLimits:function(t,e,i){return e>t?e:t>i?i:t},calcSeqParameters:function(){var t,e;this.bAutoSeqSetting&&(t=AUTOSEQ_C+AUTOSEQ_K*this._tempo,t=this.checkLimits(t,AUTOSEQ_AT_MAX,AUTOSEQ_AT_MIN),this.sequenceMs=Math.floor(t+.5)),this.bAutoSeekSetting&&(e=AUTOSEEK_C+AUTOSEEK_K*this._tempo,e=this.checkLimits(e,AUTOSEEK_AT_MAX,AUTOSEEK_AT_MIN),this.seekWindowMs=Math.floor(e+.5)),this.seekWindowLength=Math.floor(this.sampleRate*this.sequenceMs/1e3),this.seekLength=Math.floor(this.sampleRate*this.seekWindowMs/1e3)},set quickSeek(t){this.bQuickSeek=t},clone:function(){var t=new Stretch;return t.tempo=this.tempo,t.setParameters(this.sampleRate,this.sequenceMs,this.seekWindowMs,this.overlapMs),t},seekBestOverlapPosition:function(){return this.bQuickSeek?this.seekBestOverlapPositionStereoQuick():this.seekBestOverlapPositionStereo()},seekBestOverlapPositionStereo:function(){var t,e,i,r;for(this.precalcCorrReferenceStereo(),e=Number.MIN_VALUE,t=0,r=0;r<this.seekLength;r++)i=this.calcCrossCorrStereo(2*r,this.pRefMidBuffer),i>e&&(e=i,t=r);return t},seekBestOverlapPositionStereoQuick:function(){var t,e,i,r,s,o,n;for(this.precalcCorrReferenceStereo(),i=Number.MIN_VALUE,e=0,o=0,n=0,s=0;4>s;s++){for(t=0;_SCAN_OFFSETS[s][t]&&(n=o+_SCAN_OFFSETS[s][t],!(n>=this.seekLength));)r=this.calcCrossCorrStereo(2*n,this.pRefMidBuffer),r>i&&(i=r,e=n),t++;o=e}return e},precalcCorrReferenceStereo:function(){var t,e,i;for(t=0;t<this.overlapLength;t++)i=t*(this.overlapLength-t),e=2*t,this.pRefMidBuffer[e]=this.pMidBuffer[e]*i,this.pRefMidBuffer[e+1]=this.pMidBuffer[e+1]*i},calcCrossCorrStereo:function(t,e){var i=this._inputBuffer.vector;t+=this._inputBuffer.startIndex;var r,s,o;for(r=0,s=2;s<2*this.overlapLength;s+=2)o=s+t,r+=i[o]*e[s]+i[o+1]*e[s+1];return r},overlap:function(t){this.overlapStereo(2*t)},overlapStereo:function(t){var e=this._inputBuffer.vector;t+=this._inputBuffer.startIndex;var i,r,s,o,n,u,h,f=this._outputBuffer.vector,a=this._outputBuffer.endIndex;for(o=1/this.overlapLength,i=0;i<this.overlapLength;i++)s=(this.overlapLength-i)*o,n=i*o,r=2*i,u=r+t,h=r+a,f[h+0]=e[u+0]*n+this.pMidBuffer[r+0]*s,f[h+1]=e[u+1]*n+this.pMidBuffer[r+1]*s},process:function(){var t,e,i;if(null==this.pMidBuffer){if(this._inputBuffer.frameCount<this.overlapLength)return;this.pMidBuffer=new Float32Array(2*this.overlapLength),this._inputBuffer.receiveSamples(this.pMidBuffer,this.overlapLength)}for(;this._inputBuffer.frameCount>=this.sampleReq;){e=this.seekBestOverlapPosition(),this._outputBuffer.ensureAdditionalCapacity(this.overlapLength),this.overlap(Math.floor(e)),this._outputBuffer.put(this.overlapLength),i=this.seekWindowLength-2*this.overlapLength,i>0&&this._outputBuffer.putBuffer(this._inputBuffer,e+this.overlapLength,i);var r=this.inputBuffer.startIndex+2*(e+this.seekWindowLength-this.overlapLength);this.pMidBuffer.set(this._inputBuffer.vector.subarray(r,r+2*this.overlapLength)),this.skipFract+=this.nominalSkip,t=Math.floor(this.skipFract),this.skipFract-=t,this._inputBuffer.receive(t)}}}),extend(Stretch.prototype,{get tempo(){return this._tempo}});
